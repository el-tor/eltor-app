name: Build and Push Docker Image
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: false
        default: 'master'
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64]
        #platform: [linux/amd64, linux/arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'master' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: ${{ matrix.platform }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        #if: github.event_name == 'push'

      - name: Build Frontend
        run: |
          npm install -g pnpm
          npm run build:frontend
        #if: github.event_name == 'push'

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/eltor:${{ matrix.platform == 'linux/amd64' && 'latest-amd64' || 'latest-arm64' }}
            ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }}-${{ matrix.platform == 'linux/amd64' && 'amd64' || 'arm64' }}

  # manifest:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Log in to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}

  #     - name: Create and push manifest
  #       run: |
  #         docker manifest create ${{ secrets.DOCKER_USERNAME }}/eltor:latest \
  #           --amend ${{ secrets.DOCKER_USERNAME }}/eltor:latest-amd64 \
  #           --amend ${{ secrets.DOCKER_USERNAME }}/eltor:latest-arm64
  #         docker manifest push ${{ secrets.DOCKER_USERNAME }}/eltor:latest
  #         docker manifest create ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }} \
  #           --amend ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }}-amd64 \
  #           --amend ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }}-arm64
  #         docker manifest push ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }}