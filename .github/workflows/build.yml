name: Build and Push Docker Image
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: false
        default: 'master'
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'master' }}

      - name: Build Frontend
        run: |
          npm install -g pnpm
          npm run build:frontend

      - name: Upload frontend build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist
          retention-days: 1

  build-amd64:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'master' }}

      - name: Download frontend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/eltor:latest-amd64
            ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }}-amd64

  build-arm64:
    runs-on: ubuntu-latest-arm64
    needs: build-frontend
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'master' }}

      - name: Download frontend build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/eltor:latest-arm64
            ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }}-arm64

  manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create and push manifest
        run: |
          docker manifest create ${{ secrets.DOCKER_USERNAME }}/eltor:latest \
            --amend ${{ secrets.DOCKER_USERNAME }}/eltor:latest-amd64 \
            --amend ${{ secrets.DOCKER_USERNAME }}/eltor:latest-arm64
          docker manifest push ${{ secrets.DOCKER_USERNAME }}/eltor:latest
          docker manifest create ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }} \
            --amend ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }}-amd64 \
            --amend ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }}-arm64
          docker manifest push ${{ secrets.DOCKER_USERNAME }}/eltor:${{ github.sha }}